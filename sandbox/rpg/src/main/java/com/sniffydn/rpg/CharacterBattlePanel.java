/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sniffydn.rpg;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.List;

/**
 *
 * @author dnyffeler
 */
public abstract class CharacterBattlePanel extends javax.swing.JPanel {

    private final Character character;
    private final List<Character> home;
    private final List<Character> away;

    /**
     * Creates new form CharacterBattlePanel
     */
    public CharacterBattlePanel(Character c, List<Character> home, List<Character> away) {
        this.character = c;
        this.home = home;
        this.away = away;
        initComponents();
        postInitComponents();
    }

    CharacterBattlePanel(Character currentCharacter) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        attackPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        attackSubpanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        attackButton = new javax.swing.JButton();
        decisionPanel = new javax.swing.JPanel();

        attackSubpanel.setLayout(new java.awt.GridLayout(0, 1));
        jScrollPane1.setViewportView(attackSubpanel);

        javax.swing.GroupLayout attackPanelLayout = new javax.swing.GroupLayout(attackPanel);
        attackPanel.setLayout(attackPanelLayout);
        attackPanelLayout.setHorizontalGroup(
            attackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(attackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(attackPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        attackPanelLayout.setVerticalGroup(
            attackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(attackPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(attackPanelLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        setLayout(new java.awt.BorderLayout());

        attackButton.setText("Attack");
        attackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackButtonActionPerformed(evt);
            }
        });
        jPanel1.add(attackButton);

        add(jPanel1, java.awt.BorderLayout.SOUTH);

        decisionPanel.setLayout(new java.awt.GridLayout());
        add(decisionPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void attackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackButtonActionPerformed
        decisionPanel.removeAll();
        attackSubpanel.removeAll();
        for (Character c : away) {
            if (c.getHp() > 0) {
                final CharacterPanel characterPanel = new CharacterPanel(c);
                characterPanel.addMouseListener(new MouseAdapter() {

                    @Override
                    public void mousePressed(MouseEvent e) {
                        Character c = characterPanel.getCharacter();
                        int damage = (int) Math.ceil(character.getAttack() * (character.getAttack() / (1.0 * c.getDefense())));
                        c.setHp(c.getHp() - damage);
                        finishedTurn();
                    }
                });
                attackSubpanel.add(characterPanel);
            }
        }
        decisionPanel.add(attackPanel);
    }//GEN-LAST:event_attackButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attackButton;
    private javax.swing.JPanel attackPanel;
    private javax.swing.JPanel attackSubpanel;
    private javax.swing.JPanel decisionPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void postInitComponents() {
        setBorder(javax.swing.BorderFactory.createTitledBorder(character.getName()));

    }

    protected abstract void finishedTurn();
}
